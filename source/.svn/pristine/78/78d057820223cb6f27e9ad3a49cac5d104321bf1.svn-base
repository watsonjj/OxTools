//
// Created by Jason Watson on 02/11/15.
//

/*
 * 3a level of the OxTools entry structure.
 *
 * Each event is a summary of the 90ns readout of all 2048 pixels of the camera when it is
 * triggered. The summary is stored in 2048 Entry objects, which the Event object holds.
 *
 * When a new entry is added to an event, the min/max of the branches are updated.
 *
 * OxTools entry structure:
 * RUN1
 *  |-------------------------------|
 * CAMERA1                      CAMERA2...(xNumCamerasInArray)
 *  |   |-------------------|
 *  |  PIXEL1            PIXEL2...(x2048 pixels)
 *  |---------------|
 *  EVENT1         EVENT2...(xNumEventTriggersForCamera)
 *     |--------|
 *   ENTRY1   ENTRY2...(x2048 pixels)
 */

#ifndef OXTOOLS_EVENT_H
#define OXTOOLS_EVENT_H

#include <initialise.h>
#include <Entry.h>
#include <Pixel.h>

typedef std::map<int, Entry> map_int_Entry_t;


class Event {
private:
	 uint32_t mEventIndex;
	 map<string,float> mBranchValueMaxMap;
	 map<string,float> mBranchValueMinMap;
	 map<int,Entry> mEntryMap; // Container of the next level of the OxTool structure

	 void Init();
	 void AddEntry(const Entry &entry_holder);


	 //	 HillasParameter fHillasParameter;

public:
	 friend class Camera;
	 friend class Run;
	 Event() { Init();};

	 GET(EventIndex, mEventIndex, uint32_t);
	 GETMAPCONTENT(BranchMax,mBranchValueMaxMap,float,string);
	 GETMAPCONTENT(BranchMin,mBranchValueMinMap,float,string);
	 GETCREF(EntryMap, mEntryMap, map_int_Entry_t);
};


#endif //OXTOOLS_EVENT_H
