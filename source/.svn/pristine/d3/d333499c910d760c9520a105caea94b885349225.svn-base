//
// Created by Jason Watson on 18/02/2016.
//

#ifndef OXTOOLS_CHARGERESOLUTION_H
#define OXTOOLS_CHARGERESOLUTION_H

#include <initialise.h>
#include <utilities.h>

class Run;

class ChargeResolution {
	 friend class Run;
private:
	 ChargeResolution(Run* parent, string trueBranch, string measuredBranch, int maxNPE=1000)
			   : pRun(parent),
			     mTrueBranch(trueBranch),
			     mMeasuredBranch(measuredBranch),
	           mMaxNPE(maxNPE)
	 {
		 Init();
		 if (!mStaticSetup) {
			 SetRequirementMap();
			 SetGoalMap();
			 mScaleMap = mGoalMap;
			 mScaleMax = (*std::max_element(std::begin(mScaleMap), std::end(mScaleMap))).first;
			 SetRequirementGraph();
			 SetGoalGraph();
			 mStaticSetup = true;
			 SetTestGraph();
		 }
		 FillCharges();
		 SetChargeResolution();
	 }
	 Run* pRun;
	 int mMaxNPE;
	 string mTrueBranch;
	 string mMeasuredBranch;
	 map<int,double> mSumMap;
	 map<int,int> mNMap;
	 map<int,TH1F*> mHistMap_heide;
	 TGraphErrors* mChargeResolutionGraph;
	 TGraphErrors* mChargeResolutionScaledGraph;
	 TH2F* mVariationHist;
	 double mScoreTotal;
	 double mScoreLow;
	 double mScoreHigh;

	 static bool mStaticSetup;
	 static map<int,double> mRequirementMap;
	 static map<int,double> mGoalMap;
	 static map<int,double> mScaleMap;
	 static int mScaleMax;
	 static TGraph* mRequirementGraph;
	 static TGraph* mRequirementScaledGraph;
	 static TGraph* mGoalGraph;
	 static TGraph* mGoalScaledGraph;
	 static TGraph* mTestGraph;

	 void Init();
	 void FillCharges();
	 void SetChargeResolution(); // Fills all the members of ChargeResolution
	 void SetRequirementMap();
	 void SetGoalMap();
	 void SetRequirementGraph();
	 void SetGoalGraph();
	 void SetTestGraph();

public:
	 GET(ChargeResolutionGraph, mChargeResolutionGraph, TGraphErrors*);
	 GET(ChargeResolutionScaledGraph, mChargeResolutionScaledGraph, TGraphErrors*);
	 GET(RequirementGraph, mRequirementGraph, TGraph*);
	 GET(RequirementScaledGraph, mRequirementScaledGraph, TGraph*);
	 GET(GoalGraph, mGoalGraph, TGraph*);
	 GET(GoalScaledGraph, mGoalScaledGraph, TGraph*);
	 GET(TestGraph, mTestGraph, TGraph*);
	 GET(VariationHist,mVariationHist,TH2F*);
	 GET(ScoreTotal,mScoreTotal,double);
	 GET(ScoreLow, mScoreLow,double);
	 GET(ScoreHigh,mScoreHigh,double); };


#endif //OXTOOLS_CHARGERESOLUTION_H
