//
// Created by Jason Watson on 02/11/15.
//

#ifndef OXTOOLS_EVENT_H
#define OXTOOLS_EVENT_H

#include <initialise.h>
#include <Entry.h>

typedef std::map<int, Entry> map_int_Entry_t;

class Event {
private:
	 uint32_t mEventIndex;
	 map<string,float> mBranchMapValueMax;
	 map<string,float> mBranchMapValueMin;
	 map<int,Entry> mEntryMap;

	 void Init();
	 void AddEntry(const Entry &entry_holder);


	 //	 HillasParameter_ptr fHillasParameter;

public:
	 friend class Camera;
	 Event() { Init();};

	 GET(EventIndex, EventIndex, uint32_t);
	 GETMAPCONTENT(BranchMax,BranchMapValueMax,float,string);
	 GETMAPCONTENT(BranchMin,BranchMapValueMin,float,string);
	 GETCREF(EntryMap, EntryMap, map_int_Entry_t);
};


#endif //OXTOOLS_EVENT_H
