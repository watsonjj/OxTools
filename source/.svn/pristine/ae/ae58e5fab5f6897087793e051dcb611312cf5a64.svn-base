//
// Created by Jason Watson on 18/02/2016.
//

#ifndef OXTOOLS_CHARGERESOLUTION_H
#define OXTOOLS_CHARGERESOLUTION_H

#include <initialise.h>
#include <utilities.h>

class Run;

class ChargeResolutionBenchmarks {
	 friend class ChargeResolution;
private:
	 int mMaxNPE;
	 map<int,double> mRequirementMap;
	 map<int,double> mGoalMap;
	 map<int,double> mPoissonMap;
	 map<int,double> mScaleMap;
	 int mScaleMax;
	 TGraph* mRequirementGraph;
	 TGraph* mRequirementScaledGraph;
	 TGraph* mGoalGraph;
	 TGraph* mGoalScaledGraph;
	 TGraph* mPoissonGraph;
	 TGraph* mPoissonScaledGraph;
	 TGraph* mScaleGraph;

	 void SetRequirementMap();
	 void SetGoalMap();
	 void SetPoissonMap();
	 void SetRequirementGraph();
	 void SetGoalGraph();
	 void SetPoissonGraph();

public:
	 ChargeResolutionBenchmarks (int max_npe) : mMaxNPE(max_npe)
	 {
		 SetRequirementMap();
		 SetGoalMap();
		 SetPoissonMap();
		 mScaleMap = mGoalMap;
		 mScaleMax = (*std::max_element(std::begin(mScaleMap), std::end(mScaleMap))).first;
		 SetRequirementGraph();
		 SetGoalGraph();
		 SetPoissonGraph();
	 }

	 GET(RequirementGraph, mRequirementGraph, TGraph*);
	 GET(GoalGraph, mGoalGraph, TGraph*);
	 GET(PoissonGraph, mPoissonGraph, TGraph*);
	 GET(RequirementScaledGraph, mRequirementScaledGraph, TGraph*);
	 GET(GoalScaledGraph, mGoalScaledGraph, TGraph*);
	 GET(PoissonScaledGraph, mPoissonScaledGraph, TGraph*);
};

class ChargeResolution {
	 friend class Run;
private:
	 ChargeResolution(Run* parent, string trueBranch, string measuredBranch,
	                  ChargeResolutionBenchmarks& benchmarks, int max_npe)
			   : pRun(parent),
			     mTrueBranch(trueBranch),
			     mMeasuredBranch(measuredBranch),
			     mMaxNPE(max_npe),
	           mBenchmarks(benchmarks)
	 {
		 Init();
		 FillCharges();
		 SetChargeResolution();
	 }
	 Run* pRun;
	 int mMaxNPE;
	 string mTrueBranch;
	 string mMeasuredBranch;
	 map<int,double> mSumMap;
	 map<int,int> mNMap;
	 TGraphErrors* mChargeResolutionGraph;
	 TGraphErrors* mChargeResolutionScaledGraph;
	 TH2F* mVariationHist;

	 ChargeResolutionBenchmarks& mBenchmarks;

	 void Init();
	 void FillCharges();
	 void SetChargeResolution(); // Fills all the members of ChargeResolution

public:
	 GET(ChargeResolutionGraph, mChargeResolutionGraph, TGraphErrors*);
	 GET(ChargeResolutionScaledGraph, mChargeResolutionScaledGraph, TGraphErrors*);
	 GET(VariationHist,mVariationHist,TH2F*);

	 map<string,double> GetScores(double low1, double low2, double high1, double high2);
};

#endif //OXTOOLS_CHARGERESOLUTION_H
