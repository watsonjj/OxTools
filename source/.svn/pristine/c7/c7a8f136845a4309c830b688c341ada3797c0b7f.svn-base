//
// Created by Jason Watson on 16/09/15.
//

/*
 * 3b level of the OxTools entry structure.
 *
 * Each Pixel contains the properties of each of the 2048 pixel on a camera.
 *
 * OxTools entry structure:
 * RUN1
 *  |-------------------------------|
 * CAMERA1                      CAMERA2...(xNumCamerasInArray)
 *  |   |-------------------|
 *  |  PIXEL1            PIXEL2...(x2048 pixels)
 *  |---------------|
 *  EVENT1         EVENT2...(xNumEventTriggersForCamera)
 *     |--------|
 *   ENTRY1   ENTRY2...(x2048 pixels)
 */

#ifndef OXTOOLS_PIXEL_H
#define OXTOOLS_PIXEL_H

#include <initialise.h>
#include <utilities.h>

class Pixel {
private:
	 uint32_t mTTreeIndex;
	 int mPixelId;
	 int mModuleId;
	 int mModulePixelSlot; // Defined differently for readhess and libchec
	 double mXpix;
	 double mYpix;
	 double mZpix;
	 int mRow;
	 int mColumn;
	 int mCameraId;

public:
	 friend class Run;
	 friend class Camera;

	 Pixel() {Reset();}
	 Pixel(string txt_file_line) {
		 ParseTxtFileLine(txt_file_line);
	 }

	 void Reset();
	 void SetReadhessConversionBranches(TTree *&output_TTree);
	 void ParseTxtFileLine(string txt_file_line);
	 void SetInputTTreeBranches(TTree *&input_tree);

	 bool operator <(const Pixel& other) const {
		 return mPixelId < other.mPixelId;
	 }

	 GET(TTreeIndex, mTTreeIndex, uint32_t);
	 GET(PixelId, mPixelId, int);
	 GET(ModuleId, mModuleId, int);
	 GET(ModulePixelSlot, mModulePixelSlot, int);
	 GET(Xpix, mXpix, float);
	 GET(Ypix, mYpix, float);
	 GET(Zpix, mZpix, float);
	 GETSET(Row, mRow, int);
	 GETSET(Column, mColumn, int);
	 GET(Camera, mCameraId, int);
};

#endif //OXTOOLS_PIXEL_H
